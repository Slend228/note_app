generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  notes     Note[]
  folders   Folder[]

  @@map("users")
}

model Note {
  id        String    @id @default(uuid())
  title     String
  content   String?
  audioUrl  String?   @map("audio_url")
  hasAudio  Boolean   @default(false) @map("has_audio")
  tags      String[]
  isFavorite Boolean   @default(false) @map("is_favorite")
  isDeleted Boolean    @default(false) @map("is_deleted")
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  userId    String     @map("user_id")
  folderId  String?    @map("folder_id")
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  folder    Folder?    @relation(fields: [folderId], references: [id], onDelete: SetNull)

  @@map("notes")
}

model Folder {
  id        String   @id @default(uuid())
  name      String
  color     String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  notes     Note[]

  @@map("folders")
}
